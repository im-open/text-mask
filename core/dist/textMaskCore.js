!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.textMaskCore=t():e.textMaskCore=t()}(self,(()=>(()=>{"use strict";var e={d:(t,r)=>{for(var o in r)e.o(r,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:r[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{adjustCaretPosition:()=>g,conformToMask:()=>d,createTextMaskInputElement:()=>k});const r="_",o="function",n=[];function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r;if(!a(e))throw new Error("Text-mask:convertMaskToPlaceholder; The mask property must be an array.");if(-1!==e.indexOf(t))throw new Error("Placeholder character must not be used as part of the mask. Please specify a character that is not present in your mask as your placeholder character.\n\n"+"The placeholder character that was received is: ".concat(JSON.stringify(t),"\n\n")+"The mask that was received is: ".concat(JSON.stringify(e)));return e.map((e=>e instanceof RegExp?t:e)).join("")}function a(e){return Array.isArray&&Array.isArray(e)||e instanceof Array}function l(e){return"string"==typeof e||e instanceof String}const s="[]";function u(e){const t=[];let r;for(;r=e.indexOf(s),-1!==r;)t.push(r),e.splice(r,1);return{maskWithoutCaretTraps:e,indexes:t}}const c=[],f="";function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:f,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:c,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!a(t)){if(typeof t!==o)throw new Error("Text-mask:conformToMask; The mask property must be an array.");t=t(e,n),t=u(t).maskWithoutCaretTraps}const{guide:l=!0,previousConformedValue:s=f,placeholderChar:d=r,placeholder:h=i(t,d),currentCaretPosition:p,keepCharPositions:g}=n,m=!1===l&&void 0!==s,v=e.length,y=s.length,C=h.length,b=t.length,k=v-y,x=k>0,w=p+(x?-k:0),P=w+Math.abs(k);if(!0===g&&!x){let t=f;for(let e=w;e<P;e++)h[e]===d&&(t+=d);e=e.slice(0,w)+t+e.slice(w,v)}const T=e.split(f).map(((e,t)=>({char:e,isNew:t>=w&&t<P})));for(let e=v-1;e>=0;e--){const{char:t}=T[e];t!==d&&t===h[e>=w&&y===b?e-k:e]&&T.splice(e,1)}let O=f,V=!1;e:for(let e=0;e<C;e++){const r=h[e];if(r===d){if(T.length>0)for(;T.length>0;){const{char:r,isNew:o}=T.shift();if(r===d&&!0!==m){O+=d;continue e}if(t[e].test(r)){if(!0===g&&!1!==o&&s!==f&&!1!==l&&x){const t=T.length;let o=null;for(let e=0;e<t;e++){const t=T[e];if(t.char!==d&&!1===t.isNew)break;if(t.char===d){o=e;break}}null!==o?(O+=r,T.splice(o,1)):e--}else O+=r;continue e}V=!0}!1===m&&(O+=h.substr(e,C));break}O+=r}if(m&&!1===x){let e=null;for(let t=0;t<O.length;t++)h[t]===d&&(e=t);O=null!==e?O.substr(0,e+1):f}return{conformedValue:O,meta:{someCharsRejected:V}}}const h=[],p="";function g(e){let{previousConformedValue:t=p,previousPlaceholder:r=p,currentCaretPosition:o=0,conformedValue:n,rawValue:i,placeholderChar:a,placeholder:l,indexesOfPipedChars:s=h,caretTrapIndexes:u=h}=e;if(0===o||!i.length)return 0;const c=i.length,f=t.length,d=l.length,g=n.length,m=c-f,v=m>0;if(m>1&&!v&&0!==f)return o;let y,C,b=0;if(!v||t!==n&&n!==l){const e=n.toLowerCase(),t=i.toLowerCase().substr(0,o).split(p).filter((t=>-1!==e.indexOf(t)));C=t[t.length-1];const u=r.substr(0,t.length).split(p).filter((e=>e!==a)).length,c=l.substr(0,t.length).split(p).filter((e=>e!==a)).length!==u,f=void 0!==r[t.length-1]&&void 0!==l[t.length-2]&&r[t.length-1]!==a&&r[t.length-1]!==l[t.length-1]&&r[t.length-1]===l[t.length-2];!v&&(c||f)&&u>0&&l.indexOf(C)>-1&&void 0!==i[o]&&(y=!0,C=i[o]);const d=s.map((t=>e[t])).filter((e=>e===C)).length,h=t.filter((e=>e===C)).length,m=l.substr(0,l.indexOf(a)).split(p).filter(((e,t)=>e===C&&i[t]!==e)).length+h+d+(y?1:0);let k=0;for(let t=0;t<g&&(b=t+1,e[t]===C&&k++,!(k>=m));t++);}else b=o-m;if(v){let e=b;for(let t=b;t<=d;t++)if(l[t]===a&&(e=t),l[t]===a||-1!==u.indexOf(t)||t===d)return e}else if(y){for(let e=b-1;e>=0;e--)if(n[e]===C||-1!==u.indexOf(e)||0===e)return e}else for(let e=b;e>=0;e--)if(l[e-1]===a||-1!==u.indexOf(e)||0===e)return e}const m="",v="none",y="object",C="undefined"!=typeof navigator&&/Android/i.test(navigator.userAgent),b="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:setTimeout;function k(e){const t={previousConformedValue:void 0,previousPlaceholder:void 0};return{state:t,update(n){let a,s,{inputElement:c,mask:f,guide:h,pipe:p,placeholderChar:k=r,keepCharPositions:w=!1,showMask:P=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e;if(void 0===n&&(n=c.value),n===t.previousConformedValue)return;if(typeof f===y&&void 0!==f.pipe&&void 0!==f.mask&&(p=f.pipe,f=f.mask),f instanceof Array&&(a=i(f,k)),!1===f)return;const T=function(e){if(l(e))return e;if("number"!=typeof(t=e)||void 0!==t.length||isNaN(t)){if(null==e)return m;throw new Error("The 'value' provided to Text Mask needs to be a string or a number. The value "+"received was:\n\n ".concat(JSON.stringify(e)))}return String(e);var t}(n),{selectionEnd:O}=c,{previousConformedValue:V,previousPlaceholder:j}=t;let S;if(typeof f===o){if(s=f(T,{currentCaretPosition:O,previousConformedValue:V,placeholderChar:k}),!1===s)return;const{maskWithoutCaretTraps:e,indexes:t}=u(s);s=e,S=t,a=i(s,k)}else s=f;const E={previousConformedValue:V,guide:h,placeholderChar:k,pipe:p,placeholder:a,currentCaretPosition:O,keepCharPositions:w},{conformedValue:M}=d(T,s,E),A=typeof p===o;let N={};A&&(N=p(M,{rawValue:T,...E}),!1===N?N={value:V,rejected:!0}:l(N)&&(N={value:N}));const R=A?N.value:M,I=g({previousConformedValue:V,previousPlaceholder:j,conformedValue:R,placeholder:a,rawValue:T,currentCaretPosition:O,placeholderChar:k,indexesOfPipedChars:N.indexesOfPipedChars,caretTrapIndexes:S}),J=R===a&&0===I?P?a:m:R;var W,_;t.previousConformedValue=J,t.previousPlaceholder=a,c.value!==J&&(c.value=J,W=c,_=I,x()===W&&(C?b((()=>W.setSelectionRange(_,_,v)),0):W.setSelectionRange(_,_,v)))}}}function x(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:document.activeElement;return e.shadowRoot&&e.shadowRoot.activeElement?x(e.shadowRoot.activeElement):e}return t})()));